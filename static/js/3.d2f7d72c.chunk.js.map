{"version":3,"sources":["companents/Dialogs/Dialogs.module.css","companents/Dialogs/DialogItems/DialogItems.module.css","companents/Dialogs/Messages/Messages.module.css","companents/Dialogs/DialogsForm/DialogsForm.module.css","companents/Dialogs/DialogItems/DialogItems.jsx","companents/Dialogs/Messages/Messages.jsx","companents/Dialogs/DialogsForm/DialogsForm.jsx","companents/Dialogs/Dialogs.jsx","Redux/selectors/message-selector.js","companents/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItems","id","name","img","propsL","className","s","dialog","active","src","to","activeClassName","Massages","massage","maxLength40","maxLengthCreator","Textarea","Element","reduxForm","form","handleSubmit","onSubmit","button","field","Field","textarea","component","placeholder","validate","required","Dialogs","props","dialogsElements","dialogsData","map","d","friendsMessages","m","friendsMessage","myMessages","myMessage","dialogsText","dialogs","dialogItems","massages","values","addComment","newCommentText","getDialogsData","state","messagesPage","getFriendsMessages","messagesData","getMyMessages","compose","connect","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,YAAc,6BAA6B,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,WAAa,4BAA4B,gBAAkB,mC,oBCAhRD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,4BAA4B,IAAM,2B,oBCAlGD,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,OAAS,4BAA4B,MAAQ,6B,sGCkB1HC,MAdf,YAAuC,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,KAAMC,EAAM,EAANA,IAExBC,EAAS,YAAcH,EAE3B,OACQ,sBAAKI,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACI,qBAAKC,IAAKN,EAAKE,UAAWC,IAAEH,MAC5B,cAAC,IAAD,CAASO,GAAIN,EAAQO,gBAAiBL,IAAEE,OAAxC,SAAiDN,Q,kBCNlDU,EAJE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACf,OAAO,qBAAKR,UAAWC,IAAEO,QAAlB,SAA4BA,K,oDCGjCC,EAAcC,YAAiB,IAC/BC,EAAWC,YAAQ,YAsBVC,cAAU,CAAEC,KAAM,eAAlBD,EApBU,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACvB,OACI,uBAAMC,SAAUD,EAAcf,UAAWC,IAAEa,KAA3C,UACI,8BACI,wBAAQd,UAAWC,IAAEgB,OAArB,uBAIJ,qBAAKjB,UAAWC,IAAEiB,MAAlB,SACI,cAACC,EAAA,EAAD,CAAOnB,UAAWC,IAAEmB,SAAUvB,KAAM,iBAAkBwB,UAAWV,EAAUW,YAAa,eAChFC,SAAU,CAACC,IAAUf,GAD7B,uBC4BDgB,EAxCC,SAACC,GAGb,IAAIC,EAAkBD,EAAME,YACvBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAwBjC,KAAMiC,EAAEjC,KAAMD,GAAIkC,EAAElC,GAAIE,IAAKgC,EAAEhC,KAArCgC,EAAElC,OAE9BmC,EAAkBL,EAAMK,gBACvBF,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAqBxB,QAASwB,EAAEC,gBAAjBD,EAAEpC,OAE3BsC,EAAaR,EAAMQ,WAClBL,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAsBxB,QAASwB,EAAEG,WAAjBH,EAAEpC,OAOhC,OACI,sBAAKI,UAAWC,IAAEM,SAAlB,UACI,qBAAKP,UAAWC,IAAEmC,YAAlB,qBAGA,sBAAKpC,UAAWC,IAAEoC,QAAlB,UACI,qBAAKrC,UAAWC,IAAEqC,YAAlB,SACKX,IAEL,sBAAK3B,UAAWC,IAAEsC,SAAlB,UACI,qBAAKvC,UAAWC,IAAEiC,WAAlB,SACKH,IAEL,qBAAK/B,UAAWC,IAAE8B,gBAAlB,SACKG,UAIb,cAAC,EAAD,CAAmBlB,SAtBJ,SAACwB,GACpBd,EAAMe,WAAWD,EAAOE,uB,kCCnBnBC,EAAiB,SAACC,GAC3B,OAAOA,EAAMC,aAAajB,aAIjBkB,EAAqB,SAACF,GAC/B,OAAOA,EAAMC,aAAaE,aAAahB,iBAI9BiB,EAAgB,SAACJ,GAC1B,OAAOA,EAAMC,aAAaE,aAAab,YCK5Be,sBACXC,aAXoB,SAACN,GACrB,MAAO,CACHhB,YAAae,EAAeC,GAC5Bb,gBAAiBe,EAAmBF,GACpCV,WAAYc,EAAcJ,MAOL,CAACH,iBAC1BU,IAFWF,CAGTxB","file":"static/js/3.d2f7d72c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Massages\":\"Dialogs_Massages__24Cu-\",\"dialogsText\":\"Dialogs_dialogsText__2jr9c\",\"dialogs\":\"Dialogs_dialogs__1vSpe\",\"dialogItems\":\"Dialogs_dialogItems__32OdP\",\"massages\":\"Dialogs_massages__1HOP0\",\"myMessages\":\"Dialogs_myMessages__2NlyN\",\"friendsMessages\":\"Dialogs_friendsMessages__38RgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItems_dialog__LlmsU\",\"active\":\"DialogItems_active__dfinf\",\"img\":\"DialogItems_img__3f5fU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massage\":\"Messages_massage__2c34o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DialogsForm_form__1vGV-\",\"textarea\":\"DialogsForm_textarea__1ppbh\",\"button\":\"DialogsForm_button__2Tjws\",\"field\":\"DialogsForm_field__HWykH\"};","import s from './DialogItems.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\n\r\nfunction DialogItems({id, name, img}) {\r\n    \r\n    let propsL = '/dialogs/' + id;\r\n\r\n    return (\r\n            <div className={s.dialog + \" \" + s.active}>\r\n                <img src={img} className={s.img}/>\r\n                <NavLink to={propsL} activeClassName={s.active}>{name}</NavLink>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItems;","import s from './Messages.module.css'\r\n\r\nconst Massages = ({massage}) => {\r\n    return <div className={s.massage}>{massage}</div>\r\n}\r\n\r\nexport default Massages;","import s from './DialogsForm.module.css'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Element } from '../../common/formControls/formControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/Validators';\r\n\r\n\r\nconst maxLength40 = maxLengthCreator(40);\r\nconst Textarea = Element('textarea');\r\n\r\nconst DialogsReduxForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <div>\r\n                <button className={s.button}>\r\n                    comment\r\n                  </button>\r\n            </div>\r\n            <div className={s.field}>\r\n                <Field className={s.textarea} name={'newCommentText'} component={Textarea} placeholder={'message body'}\r\n                        validate={[required, maxLength40]}> </Field>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default reduxForm({ form: 'messageForm' })(DialogsReduxForm);;","import s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Massages from \"./Messages/Messages\";\r\nimport AddNevDialogsForm from './DialogsForm/DialogsForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let dialogsElements = props.dialogsData\r\n        .map(d => <DialogItems key={d.id} name={d.name} id={d.id} img={d.img} />);\r\n\r\n    let friendsMessages = props.friendsMessages\r\n        .map(m => <Massages key={m.id} massage={m.friendsMessage} />);\r\n\r\n    let myMessages = props.myMessages\r\n        .map(m => <Massages  key={m.id} massage={m.myMessage} />)\r\n\r\n\r\n    const newCommentText = (values) => {\r\n        props.addComment(values.newCommentText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.Massages}>\r\n            <div className={s.dialogsText}>\r\n                Dialogs\r\n            </div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.massages}>\r\n                    <div className={s.myMessages}>\r\n                        {friendsMessages}\r\n                    </div>\r\n                    <div className={s.friendsMessages}>\r\n                        {myMessages}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AddNevDialogsForm onSubmit={newCommentText} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","\r\nexport const getDialogsData = (state) => {\r\n    return state.messagesPage.dialogsData;\r\n}\r\n\r\n\r\nexport const getFriendsMessages = (state) => {\r\n    return state.messagesPage.messagesData.friendsMessages;\r\n}\r\n\r\n\r\nexport const getMyMessages = (state) => {\r\n    return state.messagesPage.messagesData.myMessages;\r\n}","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {addComment} from '../../Redux/messagesReducer';\r\nimport { getDialogsData, getFriendsMessages, getMyMessages } from \"../../Redux/selectors/message-selector\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        dialogsData: getDialogsData(state),\r\n        friendsMessages: getFriendsMessages(state),\r\n        myMessages: getMyMessages(state),\r\n    })\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addComment}),\r\n    withAuthRedirect\r\n    )(Dialogs);"],"sourceRoot":""}